/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1812                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleFoam;

startFrom       latestTime;//startTime;

startTime       0;

stopAt          endTime;

endTime         25; 

deltaT          1e-5;
writeControl    adjustableRunTime;
writeInterval   0.5;


purgeWrite      0;

writeFormat     binary;

writePrecision  10;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           2;

functions
{
    #includeFunc Q
    #include "surfaces"
    
    #include "AMIWeights"
	yPlus
	{
	   type yPlus;
	   libs ("libfieldFunctionObjects.so");
	   writeControl writeTime;
	   log yes;
	}
	wallShearStress1
	{
		type	wallShearStress;
		libs ("libfieldFunctionObjects.so");
		patches ("blade");
		log	yes;
		writeToFile	true;
		writeControl	writeTime;
		writeFields	yes;
	  			
	}	
	forces_blade
	{
		type          forces;

		libs          ("libforces.so");

		writeControl  writeTime;
		//timeInterval  1;

		log           yes;

		patches       ("blade");
		p       p;
		U       U;
		rho           rhoInf;     // Indicates incompressible
		log           true;
		rhoInf        999.1;          // Redundant for incompressible

		CofR          (0 0 0);    // Rotation around centre line of propeller
		writeFields   yes;
	}
	forces_duct
	{
		type          forces;

		libs          ("libforces.so");

		writeControl  writeTime;
		//timeInterval  1;

		log           yes;

		patches       ("duct");
		p       p;
		U       U;
		rho           rhoInf;     // Indicates incompressible
		log           true;
		rhoInf        999.1;          // Redundant for incompressible

		CofR          (0 0 0);    // Rotation around centre line of propeller
	}
	
	residuals
	{
		type residuals;
		libs ("libutilityFunctionObjects.so");
		writeControl writeTime;
		fields (p U k omega);
		writeFields yes;
	}


}

// ************************************************************************* //
